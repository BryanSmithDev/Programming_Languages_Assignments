; CSC 4200-01 - Programming Languages
; Name: Bryan Smith
; Date: 4/9/14
; Description: Heap Sort in Racket

;Get the value of a list's element
(define (get lis pos)
  (cond
   ( (null? lis) (display "Empty List") )
   ( (or (> pos (length lis)) (< pos 0)) (display "Invalid Position") )
   ( (= pos 1) (car lis) )
   (else (get (cdr lis) (- pos 1)) )
   )
  )

;Replace an element of a list
(define (replace lis pos item)
  (cond
    ( (> pos (length lis)) (append lis (list item)) )
    ( (= pos 1 ) ( cons item (cdr lis)) )
    (else (cons (car lis) (replace (cdr lis) (- pos 1) item)) )
   )
  )

;Swap two elements of a list
(define (swap lis pos1 pos2)
  (cond
    ( (null? lis) (display "Empty List")lis )
    ( (or (> pos1 (length lis)) (> pos2 (length lis))) (display "Invalid Position")lis )
    (else (replace (replace lis pos1 (get lis pos2)) pos2 (get lis pos1)) )
   )
  )

;Heapify a list
(define (heapsort lis)
 (cond
    ( (null? lis) lis )
    (else (build lis (length lis)))
  )
 )

(define (build lis len)
  (cond
    ( (> len 0 ) (buildheap lis (- len 1) ) )
    (else ('lis))
   )
 )

(define (buildheap lis len)
 (cond
    ( (= len 1) lis)
    (else (heap (swap lis 1 len) (- len 1)))
  )
 )

(define (heap lis len)
 (cond
    ( (= len 1) lis)
    (else (heapify (heap (swap lis 1 len) (- len 1))))
  )
 )

(define (heapify lis start end)
  (cond
    
   )
 )

(define lis '(6 5 3 1 8 7 2 4))
(heapsort lis)
